import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ProductService } from '../services/product.service';
import { Product } from '../interface/product';
import { FileHandle } from '../interface/file-handle';
import { DomSanitizer } from '@angular/platform-browser';


@Component({
  selector: 'app-product',
  templateUrl: './product.component.html',
  styleUrls: ['./product.component.css']
})
export class ProductComponent implements OnInit {


  product?: Product;
  productForm!: FormGroup;
  file: any;

  constructor(private formBuilder: FormBuilder,
    private productSerive: ProductService,
    private sanitizer: DomSanitizer) { }

  ngOnInit(): void {

    //const fileData = reader.result as string;
    //  const jsonPayload = { file: fileData };

    this.productForm = this.formBuilder.group({
      sku: ['phone12093'],
      name: ['iPhone 12'],
      description: ['iPhone 12 '],
      unitPrice: ['599'],
      active: ['true'],
      unitsInStock: ['1200'],
      // productImages : ['']
      // productImages: this.formBuilder.group({
      //   image : ['']
      // })
    });

    // this.productForm = this.formBuilder.group({
    //   product: this.formBuilder.group({
    //     sku: ['phone12093'],
    //     name: ['iPhone 12'],
    //     description:  ['iPhone 12 '],
    //       unitPrice: ['599'],
    //       active: ['true'],
    //       unitsInStock: ['1200']

    //   }),


    //   productImages: this.formBuilder.group({
    //     image : ['']
    //   })
    // });

  }




  onSubmit() {

    // const formData = new FormData();

    // formData.append(
    //   'product',
    //   new Blob([JSON.stringify(this.product)],{type:'application/json'})
    // );
    //this.productForm.controls["product"].value
    // for(var i = 0; i < this.product!.productImages.length; i++){
    //   formData.append(
    //     'image',
    //     this.product!.productImages[i].file
    //   );
    // }

    // console.log(this.productForm.value);


    this.product = this.productForm.value;
    this.product!.productImages = this.file;
    const productFormData = this.prepareFormData(this.productForm.value)

    console.log(this.product)

   // console.log(productFormData);
    // console.log(JSON.parse(JSON.stringify(this.product)))

    this.productSerive.addNewProduct( ).subscribe(
      (response: Product) => {
        console.log(response);
      },
      (error: any) => {
        console.log(error);
      }
    );

    //  console.log(this.productForm.value);
    // console.log(this.productForm.value);
    //this.productForm.reset();

  }

  prepareFormData(product: Product): FormData {
    const formData = new FormData();

    formData.append(
      'product',
      new Blob([JSON.stringify(this.product)], { type: 'application/json' })
    );

    for (var i = 0; i < product.productImages.length; i++) {
      formData.append(
        'image',
         product.productImages[i]
      );
    }

    return formData;

  }

  uploadFile(file: File) {
    // const formData = new FormData();
    // formData.append('file', file);
    const reader = new FileReader();

    reader.onload = () => {
      const fileData = reader.result as string;
      const jsonPayload = { file: fileData };
      console.log(jsonPayload);
    }

  }

  onFileSelected(event: Event) {

    const inputElement = event.target as HTMLInputElement;
    const files = inputElement.files;

    if (files) {
      this.uploadFile(files[0]);
      this.file = files[0];

     // console.log(this.file);
      const filehandle: FileHandle = {
        file: this.file,
        url: this.sanitizer.bypassSecurityTrustResourceUrl(
          window.URL.createObjectURL(this.file)
        )
      }

      // this.productForm.value

      //   this.prouct?.productImages.push(filehandle);
      // //   this.file = file[0]; // Assuming a single file is selected
      //    console.log(this.file);
    }

    // console.log(event.target.files);
  }

}
